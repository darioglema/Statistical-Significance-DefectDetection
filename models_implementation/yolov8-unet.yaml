# YOLOv8-like YAML configuration for a U-Net architecture
# Ultralytics YOLO ïš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024] # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024] # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768] # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512] # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512] # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs


backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 1, 1]]  # 0 Encoder block 1
  - [-1, 1, Conv, [64, 3, 1, 1]]  # 1
  - [-1, 1, nn.MaxPool2d, [2, 2]] # 2 Downsampling
  - [-1, 1, Conv, [128, 3, 1, 1]] # 3 Encoder block 2
  - [-1, 1, Conv, [128, 3, 1, 1]] # 4
  - [-1, 1, nn.MaxPool2d, [2, 2]] # 5 Downsampling
  - [-1, 1, Conv, [256, 3, 1, 1]] # 6 Encoder block 3
  - [-1, 1, Conv, [256, 3, 1, 1]] # 7
  - [-1, 1, nn.MaxPool2d, [2, 2]] # 8 Downsampling
  - [-1, 1, Conv, [512, 3, 1, 1]] # 9 Encoder block 4
  - [-1, 1, Conv, [512, 3, 1, 1]] # 10
  - [-1, 1, nn.MaxPool2d, [2, 2]] # 11 Downsampling
  - [-1, 1, Conv, [1024, 3, 1, 1]] # 12 Bottleneck
  - [-1, 1, Conv, [1024, 3, 1, 1]] # 13

  # Decoder starts here
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 14 Upsampling
  - [[-1, 10], 1, Concat, [1]]  # 15Concat with encoder block 4
  - [-1, 1, Conv, [512, 3, 1, 1]] # 16
  - [-1, 1, Conv, [512, 3, 1, 1]] # 17
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 18 Upsampling
  - [[-1, 7], 1, Concat, [1]]  # 19 Concat with encoder block 3
  - [-1, 1, Conv, [256, 3, 1, 1]] # 20
  - [-1, 1, Conv, [256, 3, 1, 1]] # 21 
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 22 Upsampling
  - [[-1, 4], 1, Concat, [1]]  # 23 Concat with encoder block 2
  - [-1, 1, Conv, [128, 3, 1, 1]] # 24
  - [-1, 1, Conv, [128, 3, 1, 1]] # 25
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 26 Upsampling
  - [[-1, 1], 1, Concat, [1]]  # 27 Concat with encoder block 1
  - [-1, 1, Conv, [64, 3, 1, 1]] # 28 
  - [-1, 1, Conv, [64, 3, 1, 1]] # 29 

  - [-1, 1, Conv, [64, 3, 2]] # 30 P1/2 
  - [-1, 1, Conv, [128, 3, 2]] # 31 P2/4 
  - [-1, 3, C2f, [128, True]] # 32 
  - [-1, 1, Conv, [256, 3, 2]] # 33 P3/8 
  - [-1, 6, C2f, [256, True]] # 34 
  - [-1, 1, Conv, [512, 3, 2]] # 35 P4/16
  - [-1, 6, C2f, [512, True]] # 36
  - [-1, 1, Conv, [1024, 3, 2]] # 37 P5/32
  - [-1, 3, C2f, [1024, True]] # 38
  - [-1, 1, SPPF, [1024, 5]] # 39

head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 40
  - [[-1, 36], 1, Concat, [1]] # 41 cat backbone P4
  - [-1, 3, C2f, [512]] # 42

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 43
  - [[-1, 34], 1, Concat, [1]] # 44 cat backbone P3
  - [-1, 3, C2f, [256]] # 45 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]] # 46
  - [[-1, 42], 1, Concat, [1]] # 47 cat head P4
  - [-1, 3, C2f, [512]] # 48 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]] # 49
  - [[-1, 39], 1, Concat, [1]] # 50 cat head P5
  - [-1, 3, C2f, [1024]] # 51 (P5/32-large)

  - [[45, 48, 51], 1, Detect, [nc]] # Detect(P3, P4, P5)